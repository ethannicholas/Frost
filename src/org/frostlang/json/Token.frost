-------- UPDATED --------
-*********************************************************************-
-******************** GENERATED CODE, DO NOT EDIT ********************-
-*********************************************************************-
package org.frostlang.json

uses org.frostlang.json.Position

@final
class Token : Value {
    choice Kind {
        EOF
        SHIFTRIGHT
        REGEX
        STRING
        INT
        REAL
        WS
        TRUE
        FALSE
        NULL
        LBRACE
        RBRACE
        LBRACKET
        RBRACKET
        COMMA
        COLON

        @override
        function get_asString():String {
            match self {
                when TRUE { return "TRUE" }
                when RBRACE { return "RBRACE" }
                when REAL { return "REAL" }
                when RBRACKET { return "RBRACKET" }
                when NULL { return "NULL" }
                when COMMA { return "COMMA" }
                when WS { return "WS" }
                when FALSE { return "FALSE" }
                when COLON { return "COLON" }
                when LBRACE { return "LBRACE" }
                when INT { return "INT" }
                when LBRACKET { return "LBRACKET" }
                when STRING { return "STRING" }
                when EOF { return "EOF" }
                when SHIFTRIGHT { return ">>" }
                when REGEX { return "REGEX" }
            }
            unreachable
        }
    }

    def kind:Kind
    def start:String.Index
    def end:String.Index
    def position:Position

    init(kind:Kind, start:String.Index, end:String.Index, position:Position) {
        self.kind := kind
        self.start := start
        self.end := end
        self.position := position
    }
}
