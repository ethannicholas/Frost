package org.frostlang.frostc.pass

uses org.frostlang.frostc.IR

class MergeBlocks {
    method process(ir:IR, analysis:Analyzer):Bit {
        var changed := false
        for i in ir.blocks.count - 1 ... 0 by -1 {
            def b := ir.blocks[i]
            def preds := analysis.predecessors[b.id]
            if preds !== null & preds.count = 1 {
                def p := analysis.blocks[preds.iterator.next().id]
                assert p !== null
                def last := p.statements.count - 1
                match p.statements[last] {
                    when IR.Statement.BRANCH(position, target) {
                        assert target = b.id
                        p.statements.removeIndex(last)
                        p.ids.removeIndex(last)
                        p.statements.addAll(b.statements)
                        p.ids.addAll(b.ids)
                        b.statements.clear()
                        b.ids.clear()
                        b.statements.add(IR.Statement.UNREACHABLE(position))
                        changed := true
                    }
                }
            }
        }
        return changed
    }
}
