class StreamSender {
    def input:InputStream

    def output:OutputStream

    init(input:InputStream, output:OutputStream) {
        self.input := input
        self.output := output
    }

    method send() {
        input.sendTo(output)
    }
}

method main(args:ListView<String>) {
    if args.get_count() < 2 | !args[1].endsWith(".panda") {
        Console.errorStream().printLine("Usage: panda <Script.panda> <args...>")
        System.exit(1)
    }
    def pandac := File(args[0]).parent().resolve("pandac")
    def pandacArgs := Array<String>() -- FIXME literal
    pandacArgs.add(args[1])
    pandacArgs.add("-o")
    def out := System.tempDir().resolve("panda-tmp")
    pandacArgs.add(out.path)
    def pandacProcess := System.exec(pandac, pandacArgs)
    Thread.unsafeStart(StreamSender(pandacProcess.output, Console.outputStream()).send)
    Thread.unsafeStart(StreamSender(pandacProcess.error, Console.errorStream()).send)
    if pandacProcess.waitFor() = 0 {
        def process := System.exec(out, args[2..])
        Thread.unsafeStart(StreamSender(Console.inputStream(), process.input).send)
        Thread.unsafeStart(StreamSender(process.output, Console.outputStream()).send)
        Thread.unsafeStart(StreamSender(process.error, Console.errorStream()).send)
        def exitCode := process.waitFor()
        System.exit(exitCode)
    }
    System.exit(1)
}