package frost.core
===@hidden===
class Tuple2<T0, T1> {
    def f0:T0
    def f1:T1

    init(f0:T0, f1:T1) {
       self.f0 := f0
       self.f1 := f1
    }

    @pre(i >= 0 & i < 2)
    function []<T>(i:Int):T {
        match i {
            when 0 { return f0->T }
            when 1 { return f1->T }
        }
        unreachable
    }

    @override
    function get_toString():String {
        function nonnull(o:Object?):Object {
            if o !== null { return o } else { return '<null>' }
        }
        return "(\{nonnull(f0)}, \{nonnull(f1)})"
    }
}
