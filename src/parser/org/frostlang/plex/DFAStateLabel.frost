package org.frostlang.plex

class DFAStateLabel : Key<DFAStateLabel> {
    def states:List<Int>

    init(states:List<Int>) {
        self.states := states
    }

    @override
    function get_hash():Int {
        var result := 0
        for s in states {
            result ~~= s
        }
        return result
    }

    @override
    function =(other:DFAStateLabel):Bit {
        if other.states.count != states.count {
            return false
        }
        for i in 0 .. states.count {
            if other.states[i] != states[i] {
                return false
            }
        }
        return true
    }

    @override
    function !=(other:DFAStateLabel):Bit {
        return !(self = other)
    }

    @override
    function get_asString():String {
        def result := MutableString("<")
        var separator := ""
        for s in states {
            result.append(separator)
            result.append(s)
            separator := ", "
        }
        result.append(">")
        return result.finish()
    }
}
