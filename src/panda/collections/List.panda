package panda.collections

====================================================================================================
A read/write random-access list of elements.

@see Array
====================================================================================================
interface List<T> : ListView<T>, ListWriter<T>, Collection<T> {
    @pre(range.min <= range.max)
    method []:=(range:Range<Int>, list:ListView<T>) {
        -- FIXME performance, doing this the slow and stupid way for now
        var max := range.max
        if !range.inclusive {
            max -= 1
        }
        for i in max ... range.min by -1 {
            removeIndex(i)
        }
        var index := range.min
        for v in list {
            insert(index, v)
            index += 1
        }
    }

    method []:=(range:Range<Int?>, list:ListView<T>) {
        var min := range.min
        if min = null {
            min := 0
        }

        var max := range.max
        if max = null {
            max := count
        }

        self[Range<Int>(min, max, range.inclusive)] := list
    }

    method filterInPlace(f:(T)=>(Bit)) {
        for i in count - 1 ... 0 by -1 {
            if !f(self[i]) {
                removeIndex(i)
            }
        }
    }
}
