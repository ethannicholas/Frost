package panda.collections

uses panda.core.Pointer

class Array<T> (List<T>) {
    @private
    var count := 0

    @private
    var capacity := 16

    @private
    var data:Pointer<T>

    init() {
        capacity := 16
        data := Pointer<T>.alloc(capacity)
    }

    @override
    method cleanup() {
        data.destroy()
    }

    @override
    function [](index:Int):T {
        return data[index]
    }

    @override
    method []:=(index:Int, value:T) {
        data[index] := value
    }

    @override
    method add(value:T) {
        def index := count
        count += 1
        if count > capacity {
            capacity *= 2
            data := data.realloc(capacity)
        }
        data[index] := value
    }

    @override
    function get_count():Int {
        return count
    }

    @override
    method removeIndex(index:Int) {
        for i in index .. count - 1 {
            self[i] := self[i + 1]
        }
        count -= 1
    }

    @override
    method remove(value:T) {
        for i in 0 .. count {
            if self[i] = value {
                removeIndex(i)
                return
            }
        }
    }

    @override
    method clear() {
        count := 0
    }

    @override
    function convert():String {
        def result := MutableString()
        result.append("[")
        var separator := ""
        for i in 0 .. count {
            result.append(separator)
            separator := ", "
            result.append(self[i].convert())
        }
        result.append("]")
        return result.convert()
    }
}
