package panda.core

class Bit : Value (Key<Bit>) {
    @$implicit
    init(value:builtin_bit) {
        self.value := value
    }

    @override
    function convert():String {
        if self {
            return "true"
        }
        else {
            return "false"
        }
    }

    @override
    function =(other:Bit):Bit {
        return value = other.value
    }

    @override
    function !=(other:Bit):Bit {
        return value != other.value
    }

    @override
    function hash():Int {
        if value {
            return 1
        }
        return 0
    }

    function !():Bit {
        return Bit(!value)
    }

    -- note that the '|' and '&' functions do not have any way to provide for short circuiting, so
    -- these operators require special support in the CodeGenerator. These implementations are
    -- therefore not often called.
    function |(other:Bit):Bit {
        return value | other.value
    }

    function &(other:Bit):Bit {
        return value & other.value
    }

    function ~(other:Bit):Bit {
        return Bit(value ~ other.value)
    }

    @private
    def value:builtin_bit
}