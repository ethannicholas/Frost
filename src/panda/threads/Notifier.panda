package panda.threads

class Notifier : Immutable {
    @private
    def nativeNotifier:Int64

    @private
    def lock := Lock()
    
    init(lock:Lock) {
        self.lock := lock
        create()
    }
    
    ================================================================================================
    Blocks the current thread until another thread calls the [notify()] or [notifyAll()] method on
    this notifier.
    ================================================================================================
    @external
    method wait()

    ================================================================================================
    If any other threads are waiting on this `Notifier`, chooses one of them (in a system-dependent
    fashion) and wakes it up.
    ================================================================================================
    @external
    method notify()
    
    ================================================================================================
    If any other threads are waiting on this `Notifier`, wakes up all of them.
    ================================================================================================
    @external
    method notifyAll()

    @override
    method cleanup() {
        destroy()
    }
    
    @private
    @external
    method create()
    
    @private
    @external
    method destroy()
}