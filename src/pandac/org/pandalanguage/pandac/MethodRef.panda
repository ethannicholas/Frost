package org.pandalanguage.pandac

class MethodRef {
    def value:MethodDecl

    def types:ListView<Type>

    def typeMap := HashMap<String, Type>()

    init(value:MethodDecl, types:ListView<Type>) {
        assert value.resolved
        self.value := value
        self.types := types
        assert value.owner.parameters.get_count() >= types.get_count()
        for i in 0 .. types.get_count() {
            typeMap[value.owner.name + "." + value.owner.parameters[i].name] := types[i]
        }
    }

    function parameterCount():Int {
        return value.parameters.get_count()
    }

    function parameter(index:Int):Type {
        return value.parameters[index].type.remap(typeMap)
    }

    function returnType():Type {
        return value.returnType.remap(typeMap)
    }

    function type():Type {
        return Type("<method>", Type.Kind.INVALID, -1, true)
    }

    @override
    function convert():String {
        return "MethodRef(\{value.signature()}, \{types})"
    }
}