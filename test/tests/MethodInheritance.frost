@extendable
class Super {
    @extendable
    function foo():Int64 {
        return 1
    }

    @extendable
    function foo(x:Int64):Int64 {
        return x * 2
    }
}

class S1 : Super {
    @override
    function foo():Int64 {
        return 2
    }
}

@extendable
class S2 : Super {
    @override
    @extendable
    function foo(x:Int64):Int64 {
        return x * 3
    }
}

class S3 : S2 {
    @override
    function foo():Int64 {
        return 5
    }
}

class Inheritance {
    @class
    method main() {
        var s:Super := Super()
        Console.printLine(s.foo())
        Console.printLine(s.foo(12))
        s := S1()
        Console.printLine(s.foo())
        Console.printLine(s.foo(12))
        s := S2()
        Console.printLine(s.foo())
        Console.printLine(s.foo(12))
        s := S3()
        Console.printLine(s.foo())
        Console.printLine(s.foo(12))

        var s2:S2 := S2()
        Console.printLine(s2.foo())
        Console.printLine(s2.foo(12))
        s2 := S3()
        Console.printLine(s2.foo())
        Console.printLine(s2.foo(12))
    }
}