function asSortedString(node:JSON):String {
    match node {
        when JSON.LIST(nodes) {
            return "[" + nodes.map(n => self.asSortedString(n)).join(", ") + "]"
        }
        when JSON.MAP(map) {
            def result := MutableString("{ ")
            def list := map.entries.all().sort((a, b) => a[0] > b[0])
            var separator := ""
            for e in list {
                result.append("\{separator}\{e[0]:frost}: \{asSortedString(e[1])}")
                separator := ", "
            }
            result.append(" }")
            return result.finish()
        }
        otherwise {
            return node.asString
        }
    }
}

method main() {
    def p := JSONParser()
    def json1 := p.parse("[true, 1, \"hello\"]")
    Console.printLine(json1)
    Console.printLine(json1.getBit("[0]"))
    Console.printLine(json1.getInt("[1]"))
    Console.printLine(json1.getString("[2]"))

    def json2 := p.parse(("{\n" +
                         "  \"firstName\": \"John\",\n" +
                         "  \"lastName\": \"Smith\",\n" +
                         "  \"isAlive\": true,\n" +
                         "  \"age\": 27,\n" +
                         "  \"address\": {\n" +
                         "    \"streetAddress\": \"21 2nd Street\",\n" +
                         "    \"city\": \"New York\",\n" +
                         "    \"state\": \"NY\",\n" +
                         "    \"postalCode\": \"10021-3100\"\n" +
                         "  },\n" +
                         "  \"phoneNumbers\": [\n" +
                         "    {\n" +
                         "      \"type\": \"home\",\n" +
                         "      \"number\": \"212 555-1234\"\n" +
                         "    },\n" +
                         "    {\n" +
                         "      \"type\": \"office\",\n" +
                         "      \"number\": \"646 555-4567\"\n" +
                         "    },\n" +
                         "    {\n" +
                         "      \"type\": \"mobile\",\n" +
                         "      \"number\": \"123 456-7890\"\n" +
                         "    }\n" +
                         "  ],\n" +
                         "  \"children\": [],\n" +
                         "  \"spouse\": null\n" +
                         "}")->String)
    Console.printLine(asSortedString(json2))
    Console.printLine(json2.getBit("/isAlive"))
    Console.printLine(json2.getInt("/age"))
    Console.printLine(asSortedString(json2.get("/address")))
    Console.printLine(json2.getString("/firstName"))
    Console.printLine(json2.getString("/phoneNumbers[1]/number"))
    assert json2.get("/notFound") == null
    match json2.get("/spouse") {
        when JSON.NULL {}
        otherwise {
            unreachable
        }
    }
}
