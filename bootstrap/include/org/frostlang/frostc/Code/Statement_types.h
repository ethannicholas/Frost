#pragma once
#include "frost_c.h"
typedef struct frost$core$Class frost$core$Class;
#include "frost/core/Int32_types.h"
#include "frost/core/UInt8_types.h"
#include "frost/core/Int_types.h"
#include "org/frostlang/frostc/MethodPosition_types.h"
#include "org/frostlang/frostc/Code/Statement/ID_types.h"
typedef struct org$frostlang$frostc$Code$Value org$frostlang$frostc$Code$Value;
typedef struct org$frostlang$frostc$Code$PrimitiveType org$frostlang$frostc$Code$PrimitiveType;
#include "org/frostlang/frostc/Code/Block/ID_types.h"
typedef struct frost$core$String frost$core$String;
typedef struct org$frostlang$frostc$FixedArray org$frostlang$frostc$FixedArray;
typedef struct org$frostlang$frostc$Code$Signature org$frostlang$frostc$Code$Signature;

typedef struct org$frostlang$frostc$Code$Statement {
    frost$core$Class* $class;
    frost$core$Int32 refCount;
    frost$core$UInt8 $flags;
    frost$core$Int $rawValue;
    union {
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $ADDI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $ADDF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $SUBI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $SUBF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $MULI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $MULF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $DIVS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $DIVU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $DIVF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $REMS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $REMU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $ANDI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $ANDB;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $ORI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $ORB;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $XORI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $XORB;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $SHL;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $SHRS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $SHRU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $EQI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $EQF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $NEQI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $NEQF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $GTS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $GTU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $GTF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $GES;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $GEU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $GEF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $LTS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $LTU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $LTF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $LES;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $LEU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $LEF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$PrimitiveType* field3;
        } $CONVERTS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$PrimitiveType* field3;
        } $CONVERTU;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Block$ID field1;
        } $BRANCH;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Value* field1;
            org$frostlang$frostc$Code$Block$ID field2;
            org$frostlang$frostc$Code$Block$ID field3;
        } $CONDITIONAL_BRANCH;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            frost$core$String* field1;
        } $COMMENT;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$PrimitiveType* field2;
            org$frostlang$frostc$Code$Value* field3;
        } $HEAP_ALLOC;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$PrimitiveType* field2;
        } $STACK_ALLOC;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$PrimitiveType* field2;
            org$frostlang$frostc$FixedArray* field3;
        } $CREATE_STRUCT;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$PrimitiveType* field2;
            org$frostlang$frostc$Code$Value* field3;
            org$frostlang$frostc$FixedArray* field4;
        } $DYNAMIC_CALL;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Value* field1;
            org$frostlang$frostc$FixedArray* field2;
        } $DYNAMIC_CALL_VOID;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            frost$core$Int field3;
        } $EXTRACT_FIELD;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
            org$frostlang$frostc$Code$PrimitiveType* field3;
        } $LOAD;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Value* field1;
            org$frostlang$frostc$Code$Value* field2;
        } $STORE;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
        } $NEGS;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
        } $NEGF;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
        } $NOTI;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Value* field2;
        } $NOTB;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Value* field1;
        } $RETURN;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Statement$ID field1;
            org$frostlang$frostc$Code$Signature* field2;
            org$frostlang$frostc$FixedArray* field3;
        } $STATIC_CALL;
        struct {
            org$frostlang$frostc$MethodPosition field0;
            org$frostlang$frostc$Code$Signature* field1;
            org$frostlang$frostc$FixedArray* field2;
        } $STATIC_CALL_VOID;
        struct {
            org$frostlang$frostc$MethodPosition field0;
        } $UNREACHABLE;
    } $data;
} org$frostlang$frostc$Code$Statement;
#include "frost/core/Class.h"
typedef struct { frost$core$Class* cl; int32_t refCount; uint8_t flags;frost$core$String* name; frost$core$Class* super; ITable* itable; void* vtable[3]; } org$frostlang$frostc$Code$Statement$class_type;
extern org$frostlang$frostc$Code$Statement$class_type org$frostlang$frostc$Code$Statement$class;

