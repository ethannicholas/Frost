#pragma once
#include "frost_c.h"
#include "LLVMCodeGenerator_types.h"
typedef struct org$frostlanguage$frostc$LLVMCodeGenerator org$frostlanguage$frostc$LLVMCodeGenerator;
typedef struct frost$core$String frost$core$String;
typedef struct frost$io$OutputStream frost$io$OutputStream;
typedef struct org$frostlanguage$frostc$Compiler org$frostlanguage$frostc$Compiler;
#include "frost/core/Int64_types.h"
typedef struct org$frostlanguage$frostc$Type org$frostlanguage$frostc$Type;
typedef struct org$frostlanguage$frostc$ClassDecl org$frostlanguage$frostc$ClassDecl;
typedef struct org$frostlanguage$frostc$MethodDecl org$frostlanguage$frostc$MethodDecl;
typedef struct org$frostlanguage$frostc$LLVMCodeGenerator$MethodShim org$frostlanguage$frostc$LLVMCodeGenerator$MethodShim;
#include "frost/core/Bit_types.h"
typedef struct org$frostlanguage$frostc$Pair org$frostlanguage$frostc$Pair;
typedef struct org$frostlanguage$frostc$LLVMCodeGenerator$ClassConstant org$frostlanguage$frostc$LLVMCodeGenerator$ClassConstant;
typedef struct org$frostlanguage$frostc$Variable org$frostlanguage$frostc$Variable;
typedef struct org$frostlanguage$frostc$FieldDecl org$frostlanguage$frostc$FieldDecl;
#include "org/frostlanguage/frostc/LLVMCodeGenerator/OpClass_types.h"
#include "org/frostlanguage/frostc/Position_types.h"
#include "frost/core/Real64_types.h"
typedef struct org$frostlanguage$frostc$ChoiceCase org$frostlanguage$frostc$ChoiceCase;
typedef struct org$frostlanguage$frostc$IR$Value org$frostlanguage$frostc$IR$Value;
#include "org/frostlanguage/frostc/IR/Statement/ID_types.h"
#include "org/frostlanguage/frostc/parser/Token/Kind_types.h"
#include "org/frostlanguage/frostc/IR/Block/ID_types.h"
typedef struct org$frostlanguage$frostc$FixedArray org$frostlanguage$frostc$FixedArray;
typedef struct frost$collections$ListView frost$collections$ListView;
typedef struct org$frostlanguage$frostc$IR$Statement org$frostlanguage$frostc$IR$Statement;
typedef struct org$frostlanguage$frostc$IR org$frostlanguage$frostc$IR;

void org$frostlanguage$frostc$LLVMCodeGenerator$init$frost$core$String$frost$io$OutputStream(org$frostlanguage$frostc$LLVMCodeGenerator* self, frost$core$String* p_triple, frost$io$OutputStream* p_out);
void org$frostlanguage$frostc$LLVMCodeGenerator$setCompiler$org$frostlanguage$frostc$Compiler(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Compiler* p_compiler);
void org$frostlanguage$frostc$LLVMCodeGenerator$finish(org$frostlanguage$frostc$LLVMCodeGenerator* self);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$nextVar$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$nextLabel$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$nextMetadata$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self);
void org$frostlanguage$frostc$LLVMCodeGenerator$createBlock$frost$core$String$frost$io$OutputStream(org$frostlanguage$frostc$LLVMCodeGenerator* self, frost$core$String* p_label, frost$io$OutputStream* p_out);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$fieldSize$org$frostlanguage$frostc$Type$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$alignment$org$frostlanguage$frostc$Type$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$sizeOf$org$frostlanguage$frostc$Type$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$stride$org$frostlanguage$frostc$Type$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$sizeOfWrapper$org$frostlanguage$frostc$Type$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$getChoiceDataSize$org$frostlanguage$frostc$ClassDecl$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeType$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeWrapperType$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$typeName$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$llvmType$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$llvmMethodType$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$Q$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t, org$frostlanguage$frostc$Type* p_selfType);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$wrapperTypeName$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$wrapperType$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$wrapperType$org$frostlanguage$frostc$MethodDecl$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$nullableType$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getITable$org$frostlanguage$frostc$ClassDecl$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
org$frostlanguage$frostc$LLVMCodeGenerator$MethodShim* org$frostlanguage$frostc$LLVMCodeGenerator$createMethodShim$org$frostlanguage$frostc$MethodDecl$org$frostlanguage$frostc$Type$R$org$frostlanguage$frostc$LLVMCodeGenerator$MethodShim(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_raw, org$frostlanguage$frostc$Type* p_effective);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getWrapperITable$org$frostlanguage$frostc$ClassDecl$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
frost$core$Bit org$frostlanguage$frostc$LLVMCodeGenerator$needsStructIndirection$org$frostlanguage$frostc$MethodDecl$R$frost$core$Bit(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$LLVMCodeGenerator$getMethodTableEntry$org$frostlanguage$frostc$MethodDecl$R$org$frostlanguage$frostc$Pair$LTfrost$core$String$Cfrost$core$String$GT(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m);
org$frostlanguage$frostc$LLVMCodeGenerator$ClassConstant* org$frostlanguage$frostc$LLVMCodeGenerator$getClassConstant$org$frostlanguage$frostc$ClassDecl$R$org$frostlanguage$frostc$LLVMCodeGenerator$ClassConstant(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
org$frostlanguage$frostc$LLVMCodeGenerator$ClassConstant* org$frostlanguage$frostc$LLVMCodeGenerator$getWrapperClassConstant$org$frostlanguage$frostc$ClassDecl$R$org$frostlanguage$frostc$LLVMCodeGenerator$ClassConstant(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$escapeName$frost$core$String$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, frost$core$String* p_s);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getName$org$frostlanguage$frostc$Variable$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Variable* p_v);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getName$org$frostlanguage$frostc$MethodDecl$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getName$org$frostlanguage$frostc$FieldDecl$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$FieldDecl* p_f);
org$frostlanguage$frostc$LLVMCodeGenerator$OpClass org$frostlanguage$frostc$LLVMCodeGenerator$opClass$org$frostlanguage$frostc$Type$R$org$frostlanguage$frostc$LLVMCodeGenerator$OpClass(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$wrapValue$org$frostlanguage$frostc$Position$frost$core$String$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$frost$io$OutputStream$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, frost$core$String* p_value, org$frostlanguage$frostc$Type* p_srcType, org$frostlanguage$frostc$Type* p_dstType, frost$io$OutputStream* p_out);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$unwrapValue$org$frostlanguage$frostc$Position$frost$core$String$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$frost$io$OutputStream$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, frost$core$String* p_value, org$frostlanguage$frostc$Type* p_srcType, org$frostlanguage$frostc$Type* p_dstType, frost$io$OutputStream* p_out);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$toNullableValue$org$frostlanguage$frostc$Position$frost$core$String$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$frost$io$OutputStream$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, frost$core$String* p_value, org$frostlanguage$frostc$Type* p_srcType, org$frostlanguage$frostc$Type* p_dstType, frost$io$OutputStream* p_out);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$toNonNullableValue$org$frostlanguage$frostc$Position$frost$core$String$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$frost$io$OutputStream$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, frost$core$String* p_value, org$frostlanguage$frostc$Type* p_srcType, org$frostlanguage$frostc$Type* p_dstType, frost$io$OutputStream* p_out);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getCastReference$org$frostlanguage$frostc$Position$frost$core$String$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, frost$core$String* p_value, org$frostlanguage$frostc$Type* p_src, org$frostlanguage$frostc$Type* p_target);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getRealReference$org$frostlanguage$frostc$Type$frost$core$Real64$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t, frost$core$Real64 p_r64);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getStringReference$frost$core$String$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, frost$core$String* p_s);
frost$core$Bit org$frostlanguage$frostc$LLVMCodeGenerator$haveSelfValuePointer$R$frost$core$Bit(org$frostlanguage$frostc$LLVMCodeGenerator* self);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getSelfPointer$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getSelfValue$frost$io$OutputStream$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, frost$io$OutputStream* p_out);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getNullReference$org$frostlanguage$frostc$Type$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Type* p_t);
frost$core$Int64 org$frostlanguage$frostc$LLVMCodeGenerator$getChoiceFieldOffset$org$frostlanguage$frostc$ChoiceCase$frost$core$Int64$R$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ChoiceCase* p_e, frost$core$Int64 p_index);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$selfType$org$frostlanguage$frostc$MethodDecl$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeDeclaration$org$frostlanguage$frostc$MethodDecl(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getReference$org$frostlanguage$frostc$IR$Value$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$IR$Value* p_v);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$getTypedReference$org$frostlanguage$frostc$IR$Value$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$IR$Value* p_v);
frost$core$String* org$frostlanguage$frostc$LLVMCodeGenerator$debugInfo$org$frostlanguage$frostc$Position$R$frost$core$String(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeIsNull$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeIsNonNull$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value);
frost$core$Bit org$frostlanguage$frostc$LLVMCodeGenerator$isNull$org$frostlanguage$frostc$IR$Value$R$frost$core$Bit(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$IR$Value* p_v);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeBinary$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$parser$Token$Kind$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_left, org$frostlanguage$frostc$parser$Token$Kind p_op, org$frostlanguage$frostc$IR$Value* p_right, org$frostlanguage$frostc$Type* p_type);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeBranch$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Block$ID(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Block$ID p_target);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeCast$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value, org$frostlanguage$frostc$Type* p_target);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeConditionalBranch$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Block$ID$org$frostlanguage$frostc$IR$Block$ID(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_test, org$frostlanguage$frostc$IR$Block$ID p_ifTrue, org$frostlanguage$frostc$IR$Block$ID p_ifFalse);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeConstruct$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$ClassDecl(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$ClassDecl* p_cl);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeCreateStruct$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$ClassDecl$org$frostlanguage$frostc$FixedArray$LTorg$frostlanguage$frostc$IR$Value$GT(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$ClassDecl* p_cl, org$frostlanguage$frostc$FixedArray* p_args);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeDynamicCall$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$frost$collections$ListView$LTorg$frostlanguage$frostc$IR$Value$GT(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_m, frost$collections$ListView* p_args);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeExtractField$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$FieldDecl(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$FieldDecl* p_field);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeGetChoiceFieldPointer$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$ChoiceCase$frost$core$Int64(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$ChoiceCase* p_cc, frost$core$Int64 p_index);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeGetFieldPointer$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$FieldDecl(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$FieldDecl* p_field);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeGetInterfaceMethod$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$ClassDecl$frost$core$Int64$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value, org$frostlanguage$frostc$ClassDecl* p_cl, frost$core$Int64 p_index, org$frostlanguage$frostc$Type* p_type);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeGetVirtualMethod$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$frost$core$Int64$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value, frost$core$Int64 p_index, org$frostlanguage$frostc$Type* p_type);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeLoad$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_ptr);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeNegate$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeNot$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_value);
void org$frostlanguage$frostc$LLVMCodeGenerator$writePointerAlloc$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_count, org$frostlanguage$frostc$Type* p_type);
void org$frostlanguage$frostc$LLVMCodeGenerator$writePointerDestroy$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_ptr);
void org$frostlanguage$frostc$LLVMCodeGenerator$writePointerGetIndex$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_ptr, org$frostlanguage$frostc$IR$Value* p_index);
void org$frostlanguage$frostc$LLVMCodeGenerator$writePointerOffset$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_ptr, org$frostlanguage$frostc$IR$Value* p_offset);
void org$frostlanguage$frostc$LLVMCodeGenerator$writePointerRealloc$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Value* p_ptr, org$frostlanguage$frostc$IR$Value* p_oldCount, org$frostlanguage$frostc$IR$Value* p_newCount);
void org$frostlanguage$frostc$LLVMCodeGenerator$writePointerSetIndex$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_value, org$frostlanguage$frostc$IR$Value* p_ptr, org$frostlanguage$frostc$IR$Value* p_index);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeReturn$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_value);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeStaticCall$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$MethodDecl$frost$collections$ListView$LTorg$frostlanguage$frostc$IR$Value$GT(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$MethodDecl* p_m, frost$collections$ListView* p_args);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeStore$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$IR$Value(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_value, org$frostlanguage$frostc$IR$Value* p_ptr);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeStatement$org$frostlanguage$frostc$IR$Statement$ID$org$frostlanguage$frostc$IR$Statement(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$IR$Statement$ID p_id, org$frostlanguage$frostc$IR$Statement* p_s);
void org$frostlanguage$frostc$LLVMCodeGenerator$writeIR$org$frostlanguage$frostc$IR(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$IR* p_ir);
void org$frostlanguage$frostc$LLVMCodeGenerator$write$org$frostlanguage$frostc$MethodDecl$org$frostlanguage$frostc$IR(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$MethodDecl* p_m, org$frostlanguage$frostc$IR* p_ir);
void org$frostlanguage$frostc$LLVMCodeGenerator$start$org$frostlanguage$frostc$ClassDecl(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
void org$frostlanguage$frostc$LLVMCodeGenerator$end$org$frostlanguage$frostc$ClassDecl(org$frostlanguage$frostc$LLVMCodeGenerator* self, org$frostlanguage$frostc$ClassDecl* p_cl);
void org$frostlanguage$frostc$LLVMCodeGenerator$cleanup(org$frostlanguage$frostc$LLVMCodeGenerator* self);

