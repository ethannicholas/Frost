#pragma once
#include "frost_c.h"
#include "Call_types.h"
typedef struct org$frostlanguage$frostc$Pair org$frostlanguage$frostc$Pair;
typedef struct org$frostlanguage$frostc$Compiler org$frostlanguage$frostc$Compiler;
#include "org/frostlanguage/frostc/Position_types.h"
typedef struct org$frostlanguage$frostc$IR$Value org$frostlanguage$frostc$IR$Value;
typedef struct org$frostlanguage$frostc$MethodRef org$frostlanguage$frostc$MethodRef;
typedef struct frost$collections$ListView frost$collections$ListView;
#include "org/frostlanguage/frostc/parser/Token/Kind_types.h"
typedef struct org$frostlanguage$frostc$Type org$frostlanguage$frostc$Type;
typedef struct org$frostlanguage$frostc$MethodDecl org$frostlanguage$frostc$MethodDecl;
typedef struct org$frostlanguage$frostc$MethodDecl$GenericParameter org$frostlanguage$frostc$MethodDecl$GenericParameter;
typedef struct org$frostlanguage$frostc$Compiler$TypeContext org$frostlanguage$frostc$Compiler$TypeContext;
typedef struct frost$core$String frost$core$String;
typedef struct org$frostlanguage$frostc$ASTNode org$frostlanguage$frostc$ASTNode;
typedef struct org$frostlanguage$frostc$FixedArray org$frostlanguage$frostc$FixedArray;
typedef struct org$frostlanguage$frostc$expression$Call org$frostlanguage$frostc$expression$Call;

org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$compilePointerIntrinsic$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$org$frostlanguage$frostc$MethodRef$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$R$org$frostlanguage$frostc$Pair$LTfrost$core$Bit$Corg$frostlanguage$frostc$IR$Value$Q$GT(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$MethodRef* p_m, frost$collections$ListView* p_args);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$compileNumberIntrinsic$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$org$frostlanguage$frostc$parser$Token$Kind$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Type$org$frostlanguage$frostc$Type$R$org$frostlanguage$frostc$Pair$LTfrost$core$Bit$Corg$frostlanguage$frostc$IR$Value$Q$GT(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$parser$Token$Kind p_op, frost$collections$ListView* p_args, org$frostlanguage$frostc$Type* p_operandType, org$frostlanguage$frostc$Type* p_resultType);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$compileNumberIntrinsic$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$org$frostlanguage$frostc$MethodRef$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$R$org$frostlanguage$frostc$Pair$LTfrost$core$Bit$Corg$frostlanguage$frostc$IR$Value$Q$GT(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$MethodRef* p_m, frost$collections$ListView* p_args);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$compileBitIntrinsic$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$org$frostlanguage$frostc$MethodRef$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$R$org$frostlanguage$frostc$Pair$LTfrost$core$Bit$Corg$frostlanguage$frostc$IR$Value$Q$GT(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$MethodRef* p_m, frost$collections$ListView* p_args);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$compileIntrinsic$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$org$frostlanguage$frostc$MethodRef$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$R$org$frostlanguage$frostc$Pair$LTfrost$core$Bit$Corg$frostlanguage$frostc$IR$Value$Q$GT(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$MethodRef* p_m, frost$collections$ListView* p_args);
frost$collections$ListView* org$frostlanguage$frostc$expression$Call$findGenericParameters$org$frostlanguage$frostc$MethodDecl$org$frostlanguage$frostc$Type$R$frost$collections$ListView$LTfrost$collections$ListView$LTfrost$core$Int64$GT$GT$Q(org$frostlanguage$frostc$MethodDecl* p_m, org$frostlanguage$frostc$Type* p_t);
org$frostlanguage$frostc$Type* org$frostlanguage$frostc$expression$Call$getSubtype$org$frostlanguage$frostc$Type$frost$collections$ListView$LTfrost$core$Int64$GT$R$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$Type* p_type, frost$collections$ListView* p_indices);
org$frostlanguage$frostc$Type* org$frostlanguage$frostc$expression$Call$$anonymous1$org$frostlanguage$frostc$MethodDecl$GenericParameter$R$org$frostlanguage$frostc$Type(org$frostlanguage$frostc$MethodDecl$GenericParameter* p_p);
org$frostlanguage$frostc$MethodRef* org$frostlanguage$frostc$expression$Call$performTypeInference$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$MethodRef$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$R$org$frostlanguage$frostc$MethodRef$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$MethodRef* p_m, frost$collections$ListView* p_args);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$findBestMethod$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$frost$collections$ListView$LTorg$frostlanguage$frostc$MethodDecl$GT$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$Pair$LTfrost$collections$ListView$LTorg$frostlanguage$frostc$MethodRef$GT$Cfrost$core$Int64$GT$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, frost$collections$ListView* p_methods, frost$collections$ListView* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
org$frostlanguage$frostc$Pair* org$frostlanguage$frostc$expression$Call$findBestMethod$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$frost$collections$ListView$LTorg$frostlanguage$frostc$MethodDecl$GT$frost$collections$ListView$LTorg$frostlanguage$frostc$Type$GT$Q$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$Pair$LTfrost$collections$ListView$LTorg$frostlanguage$frostc$MethodRef$GT$Cfrost$core$Int64$GT$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, frost$collections$ListView* p_methods, frost$collections$ListView* p_genericArguments, frost$collections$ListView* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
org$frostlanguage$frostc$IR$Value* org$frostlanguage$frostc$expression$Call$callMethodObject$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$IR$Value$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_m, frost$collections$ListView* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
org$frostlanguage$frostc$IR$Value* org$frostlanguage$frostc$expression$Call$compile$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$IR$Value$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_m, frost$collections$ListView* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
org$frostlanguage$frostc$IR$Value* org$frostlanguage$frostc$expression$Call$compile$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$Q$org$frostlanguage$frostc$MethodRef$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$IR$Value$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, org$frostlanguage$frostc$MethodRef* p_rawM, frost$collections$ListView* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
org$frostlanguage$frostc$IR$Value* org$frostlanguage$frostc$expression$Call$compile$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$IR$Value$frost$core$String$frost$collections$ListView$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$IR$Value$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$IR$Value* p_target, frost$core$String* p_m, frost$collections$ListView* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
org$frostlanguage$frostc$IR$Value* org$frostlanguage$frostc$expression$Call$compile$org$frostlanguage$frostc$Compiler$org$frostlanguage$frostc$Position$org$frostlanguage$frostc$ASTNode$org$frostlanguage$frostc$FixedArray$LTorg$frostlanguage$frostc$ASTNode$GT$org$frostlanguage$frostc$Compiler$TypeContext$R$org$frostlanguage$frostc$IR$Value$Q(org$frostlanguage$frostc$Compiler* p_compiler, org$frostlanguage$frostc$Position p_position, org$frostlanguage$frostc$ASTNode* p_m, org$frostlanguage$frostc$FixedArray* p_args, org$frostlanguage$frostc$Compiler$TypeContext* p_type);
void org$frostlanguage$frostc$expression$Call$init(org$frostlanguage$frostc$expression$Call* self);
void org$frostlanguage$frostc$expression$Call$cleanup(org$frostlanguage$frostc$expression$Call* self);

