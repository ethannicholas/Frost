#pragma once
#include "panda_c.h"
#include "Call_types.h"
typedef struct org$pandalanguage$pandac$Pair org$pandalanguage$pandac$Pair;
typedef struct org$pandalanguage$pandac$Compiler org$pandalanguage$pandac$Compiler;
#include "org/pandalanguage/pandac/Position_types.h"
typedef struct org$pandalanguage$pandac$IR$Value org$pandalanguage$pandac$IR$Value;
typedef struct org$pandalanguage$pandac$MethodRef org$pandalanguage$pandac$MethodRef;
typedef struct panda$collections$ListView panda$collections$ListView;
#include "org/pandalanguage/pandac/parser/Token/Kind_types.h"
typedef struct org$pandalanguage$pandac$Type org$pandalanguage$pandac$Type;
typedef struct org$pandalanguage$pandac$MethodDecl org$pandalanguage$pandac$MethodDecl;
typedef struct org$pandalanguage$pandac$MethodDecl$GenericParameter org$pandalanguage$pandac$MethodDecl$GenericParameter;
typedef struct org$pandalanguage$pandac$Compiler$TypeContext org$pandalanguage$pandac$Compiler$TypeContext;
typedef struct panda$core$String panda$core$String;
typedef struct org$pandalanguage$pandac$ASTNode org$pandalanguage$pandac$ASTNode;
typedef struct org$pandalanguage$pandac$FixedArray org$pandalanguage$pandac$FixedArray;
typedef struct org$pandalanguage$pandac$expression$Call org$pandalanguage$pandac$expression$Call;

org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$compilePointerIntrinsic$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$org$pandalanguage$pandac$MethodRef$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$R$org$pandalanguage$pandac$Pair$LTpanda$core$Bit$Corg$pandalanguage$pandac$IR$Value$Q$GT(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, org$pandalanguage$pandac$MethodRef* p_m, panda$collections$ListView* p_args);
org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$compileNumberIntrinsic$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$org$pandalanguage$pandac$parser$Token$Kind$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Type$org$pandalanguage$pandac$Type$R$org$pandalanguage$pandac$Pair$LTpanda$core$Bit$Corg$pandalanguage$pandac$IR$Value$Q$GT(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, org$pandalanguage$pandac$parser$Token$Kind p_op, panda$collections$ListView* p_args, org$pandalanguage$pandac$Type* p_operandType, org$pandalanguage$pandac$Type* p_resultType);
org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$compileNumberIntrinsic$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$org$pandalanguage$pandac$MethodRef$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$R$org$pandalanguage$pandac$Pair$LTpanda$core$Bit$Corg$pandalanguage$pandac$IR$Value$Q$GT(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, org$pandalanguage$pandac$MethodRef* p_m, panda$collections$ListView* p_args);
org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$compileBitIntrinsic$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$org$pandalanguage$pandac$MethodRef$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$R$org$pandalanguage$pandac$Pair$LTpanda$core$Bit$Corg$pandalanguage$pandac$IR$Value$Q$GT(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, org$pandalanguage$pandac$MethodRef* p_m, panda$collections$ListView* p_args);
org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$compileIntrinsic$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$org$pandalanguage$pandac$MethodRef$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$R$org$pandalanguage$pandac$Pair$LTpanda$core$Bit$Corg$pandalanguage$pandac$IR$Value$Q$GT(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, org$pandalanguage$pandac$MethodRef* p_m, panda$collections$ListView* p_args);
panda$collections$ListView* org$pandalanguage$pandac$expression$Call$findGenericParameters$org$pandalanguage$pandac$MethodDecl$org$pandalanguage$pandac$Type$R$panda$collections$ListView$LTpanda$collections$ListView$LTpanda$core$Int64$GT$GT$Q(org$pandalanguage$pandac$MethodDecl* p_m, org$pandalanguage$pandac$Type* p_t);
org$pandalanguage$pandac$Type* org$pandalanguage$pandac$expression$Call$getSubtype$org$pandalanguage$pandac$Type$panda$collections$ListView$LTpanda$core$Int64$GT$R$org$pandalanguage$pandac$Type(org$pandalanguage$pandac$Type* p_type, panda$collections$ListView* p_indices);
org$pandalanguage$pandac$Type* org$pandalanguage$pandac$expression$Call$$anonymous1$org$pandalanguage$pandac$MethodDecl$GenericParameter$R$org$pandalanguage$pandac$Type(org$pandalanguage$pandac$MethodDecl$GenericParameter* p_p);
org$pandalanguage$pandac$MethodRef* org$pandalanguage$pandac$expression$Call$performTypeInference$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$MethodRef$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$R$org$pandalanguage$pandac$MethodRef$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$MethodRef* p_m, panda$collections$ListView* p_args);
org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$findBestMethod$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$panda$collections$ListView$LTorg$pandalanguage$pandac$MethodDecl$GT$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$Pair$LTpanda$collections$ListView$LTorg$pandalanguage$pandac$MethodRef$GT$Cpanda$core$Int64$GT$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, panda$collections$ListView* p_methods, panda$collections$ListView* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
org$pandalanguage$pandac$Pair* org$pandalanguage$pandac$expression$Call$findBestMethod$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$panda$collections$ListView$LTorg$pandalanguage$pandac$MethodDecl$GT$panda$collections$ListView$LTorg$pandalanguage$pandac$Type$GT$Q$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$Pair$LTpanda$collections$ListView$LTorg$pandalanguage$pandac$MethodRef$GT$Cpanda$core$Int64$GT$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, panda$collections$ListView* p_methods, panda$collections$ListView* p_genericArguments, panda$collections$ListView* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
org$pandalanguage$pandac$IR$Value* org$pandalanguage$pandac$expression$Call$callMethodObject$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$IR$Value$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_m, panda$collections$ListView* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
org$pandalanguage$pandac$IR$Value* org$pandalanguage$pandac$expression$Call$compile$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$IR$Value$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_m, panda$collections$ListView* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
org$pandalanguage$pandac$IR$Value* org$pandalanguage$pandac$expression$Call$compile$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$Q$org$pandalanguage$pandac$MethodRef$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$IR$Value$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, org$pandalanguage$pandac$MethodRef* p_rawM, panda$collections$ListView* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
org$pandalanguage$pandac$IR$Value* org$pandalanguage$pandac$expression$Call$compile$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$IR$Value$panda$core$String$panda$collections$ListView$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$IR$Value$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$IR$Value* p_target, panda$core$String* p_m, panda$collections$ListView* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
org$pandalanguage$pandac$IR$Value* org$pandalanguage$pandac$expression$Call$compile$org$pandalanguage$pandac$Compiler$org$pandalanguage$pandac$Position$org$pandalanguage$pandac$ASTNode$org$pandalanguage$pandac$FixedArray$LTorg$pandalanguage$pandac$ASTNode$GT$org$pandalanguage$pandac$Compiler$TypeContext$R$org$pandalanguage$pandac$IR$Value$Q(org$pandalanguage$pandac$Compiler* p_compiler, org$pandalanguage$pandac$Position p_position, org$pandalanguage$pandac$ASTNode* p_m, org$pandalanguage$pandac$FixedArray* p_args, org$pandalanguage$pandac$Compiler$TypeContext* p_type);
void org$pandalanguage$pandac$expression$Call$init(org$pandalanguage$pandac$expression$Call* self);
void org$pandalanguage$pandac$expression$Call$cleanup(org$pandalanguage$pandac$expression$Call* self);

